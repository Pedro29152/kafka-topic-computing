/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.estudo.performance.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EnderecoAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7198202467835467796L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EnderecoAvroModel\",\"namespace\":\"com.estudo.performance.model\",\"fields\":[{\"name\":\"enderecoResidencial\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"complemento\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"bairro\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"municipio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"uf\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"CEP\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pais\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EnderecoAvroModel> ENCODER =
      new BinaryMessageEncoder<EnderecoAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EnderecoAvroModel> DECODER =
      new BinaryMessageDecoder<EnderecoAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EnderecoAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EnderecoAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EnderecoAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EnderecoAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EnderecoAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EnderecoAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EnderecoAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EnderecoAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String enderecoResidencial;
  private java.lang.String complemento;
  private java.lang.String bairro;
  private java.lang.String municipio;
  private java.lang.String uf;
  private java.lang.String CEP;
  private java.lang.String pais;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EnderecoAvroModel() {}

  /**
   * All-args constructor.
   * @param enderecoResidencial The new value for enderecoResidencial
   * @param complemento The new value for complemento
   * @param bairro The new value for bairro
   * @param municipio The new value for municipio
   * @param uf The new value for uf
   * @param CEP The new value for CEP
   * @param pais The new value for pais
   */
  public EnderecoAvroModel(java.lang.String enderecoResidencial, java.lang.String complemento, java.lang.String bairro, java.lang.String municipio, java.lang.String uf, java.lang.String CEP, java.lang.String pais) {
    this.enderecoResidencial = enderecoResidencial;
    this.complemento = complemento;
    this.bairro = bairro;
    this.municipio = municipio;
    this.uf = uf;
    this.CEP = CEP;
    this.pais = pais;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return enderecoResidencial;
    case 1: return complemento;
    case 2: return bairro;
    case 3: return municipio;
    case 4: return uf;
    case 5: return CEP;
    case 6: return pais;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: enderecoResidencial = value$ != null ? value$.toString() : null; break;
    case 1: complemento = value$ != null ? value$.toString() : null; break;
    case 2: bairro = value$ != null ? value$.toString() : null; break;
    case 3: municipio = value$ != null ? value$.toString() : null; break;
    case 4: uf = value$ != null ? value$.toString() : null; break;
    case 5: CEP = value$ != null ? value$.toString() : null; break;
    case 6: pais = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'enderecoResidencial' field.
   * @return The value of the 'enderecoResidencial' field.
   */
  public java.lang.String getEnderecoResidencial() {
    return enderecoResidencial;
  }


  /**
   * Sets the value of the 'enderecoResidencial' field.
   * @param value the value to set.
   */
  public void setEnderecoResidencial(java.lang.String value) {
    this.enderecoResidencial = value;
  }

  /**
   * Gets the value of the 'complemento' field.
   * @return The value of the 'complemento' field.
   */
  public java.lang.String getComplemento() {
    return complemento;
  }


  /**
   * Sets the value of the 'complemento' field.
   * @param value the value to set.
   */
  public void setComplemento(java.lang.String value) {
    this.complemento = value;
  }

  /**
   * Gets the value of the 'bairro' field.
   * @return The value of the 'bairro' field.
   */
  public java.lang.String getBairro() {
    return bairro;
  }


  /**
   * Sets the value of the 'bairro' field.
   * @param value the value to set.
   */
  public void setBairro(java.lang.String value) {
    this.bairro = value;
  }

  /**
   * Gets the value of the 'municipio' field.
   * @return The value of the 'municipio' field.
   */
  public java.lang.String getMunicipio() {
    return municipio;
  }


  /**
   * Sets the value of the 'municipio' field.
   * @param value the value to set.
   */
  public void setMunicipio(java.lang.String value) {
    this.municipio = value;
  }

  /**
   * Gets the value of the 'uf' field.
   * @return The value of the 'uf' field.
   */
  public java.lang.String getUf() {
    return uf;
  }


  /**
   * Sets the value of the 'uf' field.
   * @param value the value to set.
   */
  public void setUf(java.lang.String value) {
    this.uf = value;
  }

  /**
   * Gets the value of the 'CEP' field.
   * @return The value of the 'CEP' field.
   */
  public java.lang.String getCEP() {
    return CEP;
  }


  /**
   * Sets the value of the 'CEP' field.
   * @param value the value to set.
   */
  public void setCEP(java.lang.String value) {
    this.CEP = value;
  }

  /**
   * Gets the value of the 'pais' field.
   * @return The value of the 'pais' field.
   */
  public java.lang.String getPais() {
    return pais;
  }


  /**
   * Sets the value of the 'pais' field.
   * @param value the value to set.
   */
  public void setPais(java.lang.String value) {
    this.pais = value;
  }

  /**
   * Creates a new EnderecoAvroModel RecordBuilder.
   * @return A new EnderecoAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.EnderecoAvroModel.Builder newBuilder() {
    return new com.estudo.performance.model.EnderecoAvroModel.Builder();
  }

  /**
   * Creates a new EnderecoAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EnderecoAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.EnderecoAvroModel.Builder newBuilder(com.estudo.performance.model.EnderecoAvroModel.Builder other) {
    if (other == null) {
      return new com.estudo.performance.model.EnderecoAvroModel.Builder();
    } else {
      return new com.estudo.performance.model.EnderecoAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new EnderecoAvroModel RecordBuilder by copying an existing EnderecoAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new EnderecoAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.EnderecoAvroModel.Builder newBuilder(com.estudo.performance.model.EnderecoAvroModel other) {
    if (other == null) {
      return new com.estudo.performance.model.EnderecoAvroModel.Builder();
    } else {
      return new com.estudo.performance.model.EnderecoAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for EnderecoAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EnderecoAvroModel>
    implements org.apache.avro.data.RecordBuilder<EnderecoAvroModel> {

    private java.lang.String enderecoResidencial;
    private java.lang.String complemento;
    private java.lang.String bairro;
    private java.lang.String municipio;
    private java.lang.String uf;
    private java.lang.String CEP;
    private java.lang.String pais;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.estudo.performance.model.EnderecoAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.enderecoResidencial)) {
        this.enderecoResidencial = data().deepCopy(fields()[0].schema(), other.enderecoResidencial);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.complemento)) {
        this.complemento = data().deepCopy(fields()[1].schema(), other.complemento);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.bairro)) {
        this.bairro = data().deepCopy(fields()[2].schema(), other.bairro);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.municipio)) {
        this.municipio = data().deepCopy(fields()[3].schema(), other.municipio);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.uf)) {
        this.uf = data().deepCopy(fields()[4].schema(), other.uf);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.CEP)) {
        this.CEP = data().deepCopy(fields()[5].schema(), other.CEP);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pais)) {
        this.pais = data().deepCopy(fields()[6].schema(), other.pais);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing EnderecoAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.estudo.performance.model.EnderecoAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.enderecoResidencial)) {
        this.enderecoResidencial = data().deepCopy(fields()[0].schema(), other.enderecoResidencial);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.complemento)) {
        this.complemento = data().deepCopy(fields()[1].schema(), other.complemento);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bairro)) {
        this.bairro = data().deepCopy(fields()[2].schema(), other.bairro);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.municipio)) {
        this.municipio = data().deepCopy(fields()[3].schema(), other.municipio);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.uf)) {
        this.uf = data().deepCopy(fields()[4].schema(), other.uf);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CEP)) {
        this.CEP = data().deepCopy(fields()[5].schema(), other.CEP);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pais)) {
        this.pais = data().deepCopy(fields()[6].schema(), other.pais);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'enderecoResidencial' field.
      * @return The value.
      */
    public java.lang.String getEnderecoResidencial() {
      return enderecoResidencial;
    }


    /**
      * Sets the value of the 'enderecoResidencial' field.
      * @param value The value of 'enderecoResidencial'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setEnderecoResidencial(java.lang.String value) {
      validate(fields()[0], value);
      this.enderecoResidencial = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'enderecoResidencial' field has been set.
      * @return True if the 'enderecoResidencial' field has been set, false otherwise.
      */
    public boolean hasEnderecoResidencial() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'enderecoResidencial' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearEnderecoResidencial() {
      enderecoResidencial = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'complemento' field.
      * @return The value.
      */
    public java.lang.String getComplemento() {
      return complemento;
    }


    /**
      * Sets the value of the 'complemento' field.
      * @param value The value of 'complemento'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setComplemento(java.lang.String value) {
      validate(fields()[1], value);
      this.complemento = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'complemento' field has been set.
      * @return True if the 'complemento' field has been set, false otherwise.
      */
    public boolean hasComplemento() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'complemento' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearComplemento() {
      complemento = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'bairro' field.
      * @return The value.
      */
    public java.lang.String getBairro() {
      return bairro;
    }


    /**
      * Sets the value of the 'bairro' field.
      * @param value The value of 'bairro'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setBairro(java.lang.String value) {
      validate(fields()[2], value);
      this.bairro = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'bairro' field has been set.
      * @return True if the 'bairro' field has been set, false otherwise.
      */
    public boolean hasBairro() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'bairro' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearBairro() {
      bairro = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'municipio' field.
      * @return The value.
      */
    public java.lang.String getMunicipio() {
      return municipio;
    }


    /**
      * Sets the value of the 'municipio' field.
      * @param value The value of 'municipio'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setMunicipio(java.lang.String value) {
      validate(fields()[3], value);
      this.municipio = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'municipio' field has been set.
      * @return True if the 'municipio' field has been set, false otherwise.
      */
    public boolean hasMunicipio() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'municipio' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearMunicipio() {
      municipio = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'uf' field.
      * @return The value.
      */
    public java.lang.String getUf() {
      return uf;
    }


    /**
      * Sets the value of the 'uf' field.
      * @param value The value of 'uf'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setUf(java.lang.String value) {
      validate(fields()[4], value);
      this.uf = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'uf' field has been set.
      * @return True if the 'uf' field has been set, false otherwise.
      */
    public boolean hasUf() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'uf' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearUf() {
      uf = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'CEP' field.
      * @return The value.
      */
    public java.lang.String getCEP() {
      return CEP;
    }


    /**
      * Sets the value of the 'CEP' field.
      * @param value The value of 'CEP'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setCEP(java.lang.String value) {
      validate(fields()[5], value);
      this.CEP = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'CEP' field has been set.
      * @return True if the 'CEP' field has been set, false otherwise.
      */
    public boolean hasCEP() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'CEP' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearCEP() {
      CEP = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pais' field.
      * @return The value.
      */
    public java.lang.String getPais() {
      return pais;
    }


    /**
      * Sets the value of the 'pais' field.
      * @param value The value of 'pais'.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder setPais(java.lang.String value) {
      validate(fields()[6], value);
      this.pais = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pais' field has been set.
      * @return True if the 'pais' field has been set, false otherwise.
      */
    public boolean hasPais() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pais' field.
      * @return This builder.
      */
    public com.estudo.performance.model.EnderecoAvroModel.Builder clearPais() {
      pais = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EnderecoAvroModel build() {
      try {
        EnderecoAvroModel record = new EnderecoAvroModel();
        record.enderecoResidencial = fieldSetFlags()[0] ? this.enderecoResidencial : (java.lang.String) defaultValue(fields()[0]);
        record.complemento = fieldSetFlags()[1] ? this.complemento : (java.lang.String) defaultValue(fields()[1]);
        record.bairro = fieldSetFlags()[2] ? this.bairro : (java.lang.String) defaultValue(fields()[2]);
        record.municipio = fieldSetFlags()[3] ? this.municipio : (java.lang.String) defaultValue(fields()[3]);
        record.uf = fieldSetFlags()[4] ? this.uf : (java.lang.String) defaultValue(fields()[4]);
        record.CEP = fieldSetFlags()[5] ? this.CEP : (java.lang.String) defaultValue(fields()[5]);
        record.pais = fieldSetFlags()[6] ? this.pais : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EnderecoAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<EnderecoAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EnderecoAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<EnderecoAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.enderecoResidencial);

    if (this.complemento == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.complemento);
    }

    if (this.bairro == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bairro);
    }

    out.writeString(this.municipio);

    out.writeString(this.uf);

    out.writeString(this.CEP);

    out.writeString(this.pais);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.enderecoResidencial = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.complemento = null;
      } else {
        this.complemento = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bairro = null;
      } else {
        this.bairro = in.readString();
      }

      this.municipio = in.readString();

      this.uf = in.readString();

      this.CEP = in.readString();

      this.pais = in.readString();

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.enderecoResidencial = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.complemento = null;
          } else {
            this.complemento = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bairro = null;
          } else {
            this.bairro = in.readString();
          }
          break;

        case 3:
          this.municipio = in.readString();
          break;

        case 4:
          this.uf = in.readString();
          break;

        case 5:
          this.CEP = in.readString();
          break;

        case 6:
          this.pais = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










