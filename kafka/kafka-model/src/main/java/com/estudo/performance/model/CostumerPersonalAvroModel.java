/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.estudo.performance.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CostumerPersonalAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1404249335486708383L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CostumerPersonalAvroModel\",\"namespace\":\"com.estudo.performance.model\",\"fields\":[{\"name\":\"nomeCompleto\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cpf\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nomeSocial\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"dataNascimento\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"estadoCivil\",\"type\":[\"null\",\"int\"]},{\"name\":\"sexo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nacionalidade\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"endereco\",\"type\":{\"type\":\"record\",\"name\":\"EnderecoAvroModel\",\"fields\":[{\"name\":\"enderecoResidencial\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"complemento\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"bairro\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"municipio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"uf\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"CEP\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pais\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CostumerPersonalAvroModel> ENCODER =
      new BinaryMessageEncoder<CostumerPersonalAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CostumerPersonalAvroModel> DECODER =
      new BinaryMessageDecoder<CostumerPersonalAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CostumerPersonalAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CostumerPersonalAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CostumerPersonalAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CostumerPersonalAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CostumerPersonalAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CostumerPersonalAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CostumerPersonalAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CostumerPersonalAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String nomeCompleto;
  private java.lang.String cpf;
  private java.lang.String nomeSocial;
  private java.lang.String dataNascimento;
  private java.lang.Integer estadoCivil;
  private java.lang.String sexo;
  private java.lang.String nacionalidade;
  private com.estudo.performance.model.EnderecoAvroModel endereco;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CostumerPersonalAvroModel() {}

  /**
   * All-args constructor.
   * @param nomeCompleto The new value for nomeCompleto
   * @param cpf The new value for cpf
   * @param nomeSocial The new value for nomeSocial
   * @param dataNascimento The new value for dataNascimento
   * @param estadoCivil The new value for estadoCivil
   * @param sexo The new value for sexo
   * @param nacionalidade The new value for nacionalidade
   * @param endereco The new value for endereco
   */
  public CostumerPersonalAvroModel(java.lang.String nomeCompleto, java.lang.String cpf, java.lang.String nomeSocial, java.lang.String dataNascimento, java.lang.Integer estadoCivil, java.lang.String sexo, java.lang.String nacionalidade, com.estudo.performance.model.EnderecoAvroModel endereco) {
    this.nomeCompleto = nomeCompleto;
    this.cpf = cpf;
    this.nomeSocial = nomeSocial;
    this.dataNascimento = dataNascimento;
    this.estadoCivil = estadoCivil;
    this.sexo = sexo;
    this.nacionalidade = nacionalidade;
    this.endereco = endereco;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nomeCompleto;
    case 1: return cpf;
    case 2: return nomeSocial;
    case 3: return dataNascimento;
    case 4: return estadoCivil;
    case 5: return sexo;
    case 6: return nacionalidade;
    case 7: return endereco;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nomeCompleto = value$ != null ? value$.toString() : null; break;
    case 1: cpf = value$ != null ? value$.toString() : null; break;
    case 2: nomeSocial = value$ != null ? value$.toString() : null; break;
    case 3: dataNascimento = value$ != null ? value$.toString() : null; break;
    case 4: estadoCivil = (java.lang.Integer)value$; break;
    case 5: sexo = value$ != null ? value$.toString() : null; break;
    case 6: nacionalidade = value$ != null ? value$.toString() : null; break;
    case 7: endereco = (com.estudo.performance.model.EnderecoAvroModel)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'nomeCompleto' field.
   * @return The value of the 'nomeCompleto' field.
   */
  public java.lang.String getNomeCompleto() {
    return nomeCompleto;
  }


  /**
   * Sets the value of the 'nomeCompleto' field.
   * @param value the value to set.
   */
  public void setNomeCompleto(java.lang.String value) {
    this.nomeCompleto = value;
  }

  /**
   * Gets the value of the 'cpf' field.
   * @return The value of the 'cpf' field.
   */
  public java.lang.String getCpf() {
    return cpf;
  }


  /**
   * Sets the value of the 'cpf' field.
   * @param value the value to set.
   */
  public void setCpf(java.lang.String value) {
    this.cpf = value;
  }

  /**
   * Gets the value of the 'nomeSocial' field.
   * @return The value of the 'nomeSocial' field.
   */
  public java.lang.String getNomeSocial() {
    return nomeSocial;
  }


  /**
   * Sets the value of the 'nomeSocial' field.
   * @param value the value to set.
   */
  public void setNomeSocial(java.lang.String value) {
    this.nomeSocial = value;
  }

  /**
   * Gets the value of the 'dataNascimento' field.
   * @return The value of the 'dataNascimento' field.
   */
  public java.lang.String getDataNascimento() {
    return dataNascimento;
  }


  /**
   * Sets the value of the 'dataNascimento' field.
   * @param value the value to set.
   */
  public void setDataNascimento(java.lang.String value) {
    this.dataNascimento = value;
  }

  /**
   * Gets the value of the 'estadoCivil' field.
   * @return The value of the 'estadoCivil' field.
   */
  public java.lang.Integer getEstadoCivil() {
    return estadoCivil;
  }


  /**
   * Sets the value of the 'estadoCivil' field.
   * @param value the value to set.
   */
  public void setEstadoCivil(java.lang.Integer value) {
    this.estadoCivil = value;
  }

  /**
   * Gets the value of the 'sexo' field.
   * @return The value of the 'sexo' field.
   */
  public java.lang.String getSexo() {
    return sexo;
  }


  /**
   * Sets the value of the 'sexo' field.
   * @param value the value to set.
   */
  public void setSexo(java.lang.String value) {
    this.sexo = value;
  }

  /**
   * Gets the value of the 'nacionalidade' field.
   * @return The value of the 'nacionalidade' field.
   */
  public java.lang.String getNacionalidade() {
    return nacionalidade;
  }


  /**
   * Sets the value of the 'nacionalidade' field.
   * @param value the value to set.
   */
  public void setNacionalidade(java.lang.String value) {
    this.nacionalidade = value;
  }

  /**
   * Gets the value of the 'endereco' field.
   * @return The value of the 'endereco' field.
   */
  public com.estudo.performance.model.EnderecoAvroModel getEndereco() {
    return endereco;
  }


  /**
   * Sets the value of the 'endereco' field.
   * @param value the value to set.
   */
  public void setEndereco(com.estudo.performance.model.EnderecoAvroModel value) {
    this.endereco = value;
  }

  /**
   * Creates a new CostumerPersonalAvroModel RecordBuilder.
   * @return A new CostumerPersonalAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.CostumerPersonalAvroModel.Builder newBuilder() {
    return new com.estudo.performance.model.CostumerPersonalAvroModel.Builder();
  }

  /**
   * Creates a new CostumerPersonalAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CostumerPersonalAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.CostumerPersonalAvroModel.Builder newBuilder(com.estudo.performance.model.CostumerPersonalAvroModel.Builder other) {
    if (other == null) {
      return new com.estudo.performance.model.CostumerPersonalAvroModel.Builder();
    } else {
      return new com.estudo.performance.model.CostumerPersonalAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new CostumerPersonalAvroModel RecordBuilder by copying an existing CostumerPersonalAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new CostumerPersonalAvroModel RecordBuilder
   */
  public static com.estudo.performance.model.CostumerPersonalAvroModel.Builder newBuilder(com.estudo.performance.model.CostumerPersonalAvroModel other) {
    if (other == null) {
      return new com.estudo.performance.model.CostumerPersonalAvroModel.Builder();
    } else {
      return new com.estudo.performance.model.CostumerPersonalAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for CostumerPersonalAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CostumerPersonalAvroModel>
    implements org.apache.avro.data.RecordBuilder<CostumerPersonalAvroModel> {

    private java.lang.String nomeCompleto;
    private java.lang.String cpf;
    private java.lang.String nomeSocial;
    private java.lang.String dataNascimento;
    private java.lang.Integer estadoCivil;
    private java.lang.String sexo;
    private java.lang.String nacionalidade;
    private com.estudo.performance.model.EnderecoAvroModel endereco;
    private com.estudo.performance.model.EnderecoAvroModel.Builder enderecoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.estudo.performance.model.CostumerPersonalAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nomeCompleto)) {
        this.nomeCompleto = data().deepCopy(fields()[0].schema(), other.nomeCompleto);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.cpf)) {
        this.cpf = data().deepCopy(fields()[1].schema(), other.cpf);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.nomeSocial)) {
        this.nomeSocial = data().deepCopy(fields()[2].schema(), other.nomeSocial);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.dataNascimento)) {
        this.dataNascimento = data().deepCopy(fields()[3].schema(), other.dataNascimento);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.estadoCivil)) {
        this.estadoCivil = data().deepCopy(fields()[4].schema(), other.estadoCivil);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.sexo)) {
        this.sexo = data().deepCopy(fields()[5].schema(), other.sexo);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.nacionalidade)) {
        this.nacionalidade = data().deepCopy(fields()[6].schema(), other.nacionalidade);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.endereco)) {
        this.endereco = data().deepCopy(fields()[7].schema(), other.endereco);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasEnderecoBuilder()) {
        this.enderecoBuilder = com.estudo.performance.model.EnderecoAvroModel.newBuilder(other.getEnderecoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CostumerPersonalAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.estudo.performance.model.CostumerPersonalAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.nomeCompleto)) {
        this.nomeCompleto = data().deepCopy(fields()[0].schema(), other.nomeCompleto);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cpf)) {
        this.cpf = data().deepCopy(fields()[1].schema(), other.cpf);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nomeSocial)) {
        this.nomeSocial = data().deepCopy(fields()[2].schema(), other.nomeSocial);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dataNascimento)) {
        this.dataNascimento = data().deepCopy(fields()[3].schema(), other.dataNascimento);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.estadoCivil)) {
        this.estadoCivil = data().deepCopy(fields()[4].schema(), other.estadoCivil);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sexo)) {
        this.sexo = data().deepCopy(fields()[5].schema(), other.sexo);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nacionalidade)) {
        this.nacionalidade = data().deepCopy(fields()[6].schema(), other.nacionalidade);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.endereco)) {
        this.endereco = data().deepCopy(fields()[7].schema(), other.endereco);
        fieldSetFlags()[7] = true;
      }
      this.enderecoBuilder = null;
    }

    /**
      * Gets the value of the 'nomeCompleto' field.
      * @return The value.
      */
    public java.lang.String getNomeCompleto() {
      return nomeCompleto;
    }


    /**
      * Sets the value of the 'nomeCompleto' field.
      * @param value The value of 'nomeCompleto'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setNomeCompleto(java.lang.String value) {
      validate(fields()[0], value);
      this.nomeCompleto = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nomeCompleto' field has been set.
      * @return True if the 'nomeCompleto' field has been set, false otherwise.
      */
    public boolean hasNomeCompleto() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nomeCompleto' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearNomeCompleto() {
      nomeCompleto = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cpf' field.
      * @return The value.
      */
    public java.lang.String getCpf() {
      return cpf;
    }


    /**
      * Sets the value of the 'cpf' field.
      * @param value The value of 'cpf'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setCpf(java.lang.String value) {
      validate(fields()[1], value);
      this.cpf = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cpf' field has been set.
      * @return True if the 'cpf' field has been set, false otherwise.
      */
    public boolean hasCpf() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'cpf' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearCpf() {
      cpf = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nomeSocial' field.
      * @return The value.
      */
    public java.lang.String getNomeSocial() {
      return nomeSocial;
    }


    /**
      * Sets the value of the 'nomeSocial' field.
      * @param value The value of 'nomeSocial'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setNomeSocial(java.lang.String value) {
      validate(fields()[2], value);
      this.nomeSocial = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nomeSocial' field has been set.
      * @return True if the 'nomeSocial' field has been set, false otherwise.
      */
    public boolean hasNomeSocial() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nomeSocial' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearNomeSocial() {
      nomeSocial = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataNascimento' field.
      * @return The value.
      */
    public java.lang.String getDataNascimento() {
      return dataNascimento;
    }


    /**
      * Sets the value of the 'dataNascimento' field.
      * @param value The value of 'dataNascimento'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setDataNascimento(java.lang.String value) {
      validate(fields()[3], value);
      this.dataNascimento = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'dataNascimento' field has been set.
      * @return True if the 'dataNascimento' field has been set, false otherwise.
      */
    public boolean hasDataNascimento() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'dataNascimento' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearDataNascimento() {
      dataNascimento = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'estadoCivil' field.
      * @return The value.
      */
    public java.lang.Integer getEstadoCivil() {
      return estadoCivil;
    }


    /**
      * Sets the value of the 'estadoCivil' field.
      * @param value The value of 'estadoCivil'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setEstadoCivil(java.lang.Integer value) {
      validate(fields()[4], value);
      this.estadoCivil = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'estadoCivil' field has been set.
      * @return True if the 'estadoCivil' field has been set, false otherwise.
      */
    public boolean hasEstadoCivil() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'estadoCivil' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearEstadoCivil() {
      estadoCivil = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sexo' field.
      * @return The value.
      */
    public java.lang.String getSexo() {
      return sexo;
    }


    /**
      * Sets the value of the 'sexo' field.
      * @param value The value of 'sexo'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setSexo(java.lang.String value) {
      validate(fields()[5], value);
      this.sexo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sexo' field has been set.
      * @return True if the 'sexo' field has been set, false otherwise.
      */
    public boolean hasSexo() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sexo' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearSexo() {
      sexo = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'nacionalidade' field.
      * @return The value.
      */
    public java.lang.String getNacionalidade() {
      return nacionalidade;
    }


    /**
      * Sets the value of the 'nacionalidade' field.
      * @param value The value of 'nacionalidade'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setNacionalidade(java.lang.String value) {
      validate(fields()[6], value);
      this.nacionalidade = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'nacionalidade' field has been set.
      * @return True if the 'nacionalidade' field has been set, false otherwise.
      */
    public boolean hasNacionalidade() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'nacionalidade' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearNacionalidade() {
      nacionalidade = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'endereco' field.
      * @return The value.
      */
    public com.estudo.performance.model.EnderecoAvroModel getEndereco() {
      return endereco;
    }


    /**
      * Sets the value of the 'endereco' field.
      * @param value The value of 'endereco'.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setEndereco(com.estudo.performance.model.EnderecoAvroModel value) {
      validate(fields()[7], value);
      this.enderecoBuilder = null;
      this.endereco = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'endereco' field has been set.
      * @return True if the 'endereco' field has been set, false otherwise.
      */
    public boolean hasEndereco() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'endereco' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.estudo.performance.model.EnderecoAvroModel.Builder getEnderecoBuilder() {
      if (enderecoBuilder == null) {
        if (hasEndereco()) {
          setEnderecoBuilder(com.estudo.performance.model.EnderecoAvroModel.newBuilder(endereco));
        } else {
          setEnderecoBuilder(com.estudo.performance.model.EnderecoAvroModel.newBuilder());
        }
      }
      return enderecoBuilder;
    }

    /**
     * Sets the Builder instance for the 'endereco' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder setEnderecoBuilder(com.estudo.performance.model.EnderecoAvroModel.Builder value) {
      clearEndereco();
      enderecoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'endereco' field has an active Builder instance
     * @return True if the 'endereco' field has an active Builder instance
     */
    public boolean hasEnderecoBuilder() {
      return enderecoBuilder != null;
    }

    /**
      * Clears the value of the 'endereco' field.
      * @return This builder.
      */
    public com.estudo.performance.model.CostumerPersonalAvroModel.Builder clearEndereco() {
      endereco = null;
      enderecoBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CostumerPersonalAvroModel build() {
      try {
        CostumerPersonalAvroModel record = new CostumerPersonalAvroModel();
        record.nomeCompleto = fieldSetFlags()[0] ? this.nomeCompleto : (java.lang.String) defaultValue(fields()[0]);
        record.cpf = fieldSetFlags()[1] ? this.cpf : (java.lang.String) defaultValue(fields()[1]);
        record.nomeSocial = fieldSetFlags()[2] ? this.nomeSocial : (java.lang.String) defaultValue(fields()[2]);
        record.dataNascimento = fieldSetFlags()[3] ? this.dataNascimento : (java.lang.String) defaultValue(fields()[3]);
        record.estadoCivil = fieldSetFlags()[4] ? this.estadoCivil : (java.lang.Integer) defaultValue(fields()[4]);
        record.sexo = fieldSetFlags()[5] ? this.sexo : (java.lang.String) defaultValue(fields()[5]);
        record.nacionalidade = fieldSetFlags()[6] ? this.nacionalidade : (java.lang.String) defaultValue(fields()[6]);
        if (enderecoBuilder != null) {
          try {
            record.endereco = this.enderecoBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("endereco"));
            throw e;
          }
        } else {
          record.endereco = fieldSetFlags()[7] ? this.endereco : (com.estudo.performance.model.EnderecoAvroModel) defaultValue(fields()[7]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CostumerPersonalAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<CostumerPersonalAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CostumerPersonalAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<CostumerPersonalAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.nomeCompleto);

    out.writeString(this.cpf);

    out.writeString(this.nomeSocial);

    out.writeString(this.dataNascimento);

    if (this.estadoCivil == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.estadoCivil);
    }

    out.writeString(this.sexo);

    out.writeString(this.nacionalidade);

    this.endereco.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.nomeCompleto = in.readString();

      this.cpf = in.readString();

      this.nomeSocial = in.readString();

      this.dataNascimento = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.estadoCivil = null;
      } else {
        this.estadoCivil = in.readInt();
      }

      this.sexo = in.readString();

      this.nacionalidade = in.readString();

      if (this.endereco == null) {
        this.endereco = new com.estudo.performance.model.EnderecoAvroModel();
      }
      this.endereco.customDecode(in);

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.nomeCompleto = in.readString();
          break;

        case 1:
          this.cpf = in.readString();
          break;

        case 2:
          this.nomeSocial = in.readString();
          break;

        case 3:
          this.dataNascimento = in.readString();
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.estadoCivil = null;
          } else {
            this.estadoCivil = in.readInt();
          }
          break;

        case 5:
          this.sexo = in.readString();
          break;

        case 6:
          this.nacionalidade = in.readString();
          break;

        case 7:
          if (this.endereco == null) {
            this.endereco = new com.estudo.performance.model.EnderecoAvroModel();
          }
          this.endereco.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










